/*
 * User and Authentication Backend
 *
 * # API for authentication and managing user accounts  This is the API of the service at P7M that manages tenants, accounts and authentication. It is the basis of many services of P7M.  The caller has to be authenticated with the system and provide a JWT token in the Authorization header of the HTTP request. When using the API you typically get this token by authenticating first with OAuth 2.0.  When you are trying this API using the Swagger interface, you need to click the `Authorize` button and then again the Authorize button in the pop-up that gets opened.
 *
 * The version of the OpenAPI document: 0.13.0
 * Contact: tech@p7m.de
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct NewClient {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "redirectUri")]
    pub redirect_uri: String,
    #[serde(rename = "refreshToken")]
    pub refresh_token: bool,
    #[serde(rename = "sessionDuration", skip_serializing_if = "Option::is_none")]
    pub session_duration: Option<i32>,
    #[serde(rename = "clientSecret")]
    pub client_secret: String,
}

impl NewClient {
    pub fn new(name: String, redirect_uri: String, refresh_token: bool, client_secret: String) -> NewClient {
        NewClient {
            name,
            redirect_uri,
            refresh_token,
            session_duration: None,
            client_secret,
        }
    }
}


